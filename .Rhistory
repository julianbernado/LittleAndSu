devtools::install("incomeImputation")
devtools::document()
warnings()
devtools::document()
warnings()
devtools::document()
setwd(/Users/julian/Desktop/stanford/EITC Research/The New Land/little_and_su/incomeImputation)
setwd(\Users/julian/Desktop/stanford/EITC Research/The New Land/little_and_su/incomeImputation)
setwd(\Users\julian\Desktop\stanford\EITC Research\The New Land\little_and_su\incomeImputation)
setwd("/Users/julian/Desktop/stanford/EITC Research/The New Land/little_and_su/incomeImputation")
devtools::document()
setwd("/Users/julian/Desktop/stanford/EITC Research/The New Land/little_and_su")
devtools::document()
setwd("/Users/julian/Desktop/stanford/EITC Research/The New Land/little_and_su/incomeImputation")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
generate_window(c(1, 2, 3, 4, 5), center = 3, length = 3)
generate_window(c(1, 2, 3, 4, 5), center = 1, length = 3)
devtools::document()
?little_and_su
devtools::document()
devtools::document()
?little_and_su
usethis::use_testthat()
log(0)
testthat::context("generate_window works properly")
testthat::test_that("Basic numeric vector can generate proper window",)
testthat::test_that("Basic numeric vector with reasonable window is generated correctly", {
testthat::expect_equal(c(4,5,6),generate_window(1:10, center = 5, length = 3))
})
browseVignettes()
usethis::use_test("Generate window tests")
usethis::use_test("generate_window_tests")
usethis::use_test("generate_window_tests")
usethis::use_test("generate_window")
usethis::use_test("preprocess_df")
usethis::use_test("little_and_su")
vignette("custom-expectation")
devtools::load_all()
ls_test1_df = rbind(
c(1, 1, 2),
c(9, 11, 12),
c(1, NA, 3),
c(12, 11, NA)
)
ls_test3_df = cbind(c(1, 2, 1, 1), ls_test1_df)
imputed_ls_test3_df = little_and_su(ls_test3_df, imputation_classes_col = 1)
unlist(little_and_su(ls_test3_df)[3,3])
198/137
unlist(little_and_su(ls_test3_df)[3,3])
unlist(little_and_su(ls_test3_df)[4,4])
2667/137
ls_test5_df = ls_test1_df
ls_test5_df[1, 3] = NA
ls_test5_df[2, 3] = NA
imputed_ls_test5_df = little_and_su(ls_test5_df)
View(imputed_ls_test5_df)
imputed_ls_test5_df[1,3]
unlist(imputed_ls_test5_df[1,3])
usethis::use_test("carryover")
usethis::use_vignette("my-vignette")
usethis::use_vignette("little_and_su")
library(incomeImputation)
library("incomeImputation")
devtools::load_all()
library("incomeImputation")
library("incomeImputation")
devtools::load_all()
vignette("little_and_su")
vignette("little_and_su", package = "incomeImputation")
little_and_su(Y_mis, verbose = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
Y = rbind(
c(1, 2, 3),
c(10, 20, 30),
c(2, NA, 6),
c(20, 40, NA)
)
W = little_and_su(Y)
library("incomeImputation")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
devtools::load_all()
Y = rbind(
c(1, 2, 3),
c(10, 20, 30),
c(2, NA, 6),
c(20, 40, NA)
)
W = little_and_su(Y)
print(W)
devtools::build_vignettes()
devtools::document()
v
v
?little_and_su
devtools::build()
devtools::load_all()
print(little_and_su(Y))
Y = rbind(
c(1, 2, 3),
c(10, 20, 30),
c(2, NA, 6),
c(20, 40, NA)
)
print(little_and_su(Y))
View((little_and_su(Y)))
as.table(little_and_su(Y))
Y = rbind(
c(1, 2, 3),
c(10, 20, 30),
c(2, NA, 6),
c(20, 40, NA)
)
as.table(little_and_su(Y))
little_and_su(Y)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
work_type = as.factor(c("white", "blue", "blue"))
work_type
55/50
120/100
70/120
55*(70/120)
55*(70/120)
devtools::load_all()
little_and_su(observed_values)[3,2]
observed_values = rbind(
c(50000, 55000, 45000),
c(100000, 120000, 70000),
c(50000, 60000, NA)
)
little_and_su(observed_values)[3,2]
little_and_su(observed_values)[3,3]
little_and_su(observed_values)
print(little_and_su(observed_values)[3,3])
work_type = as.factor(c("unrelated", "real_estate", "real_estate"))
observed_values = cbind(work_type, observed_values)
observed_values
imputed_income = little_and_su(observed_values, imputation_classes_col = "work_type")
devtools::load_all()
observed_values = rbind(
c(50000, 55000, 45000),
c(100000, 120000, 70000),
c(50000, 60000, NA)
)
work_type = as.factor(c("unrelated", "real_estate", "real_estate"))
observed_values = cbind(work_type, observed_values)
imputed_income = little_and_su(observed_values, imputation_classes_col = "work_type")
devtools::load_all()
observed_values = rbind(
c(50000, 55000, 45000),
c(100000, 120000, 70000),
c(50000, 60000, NA)
)
work_type = as.factor(c("unrelated", "real_estate", "real_estate"))
observed_values = cbind(work_type, observed_values)
imputed_income = little_and_su(observed_values, imputation_classes_col = "work_type")
imputed_income = little_and_su(observed_values, imputation_classes_col = 1)
imputed_income
imputed_income = little_and_su(observed_values, imputation_classes_col = 1)
imputed_income
devtools::test()
devtools::load_all()
observed_values = rbind(
c(50000, 55000, 45000),
c(100000, 120000, 70000),
c(50000, 60000, NA)
)
work_type = as.factor(c("unrelated", "real_estate", "real_estate"))
observed_values = cbind(work_type, observed_values)
imputed_income = little_and_su(observed_values, imputation_classes_col = 1)
imputed_income
devtools::load_all()
observed_values = rbind(
c(50000, 55000, 45000),
c(100000, 120000, 70000),
c(50000, 60000, NA)
)
work_type = as.factor(c("unrelated", "real_estate", "real_estate"))
observed_values = cbind(work_type, observed_values)
imputed_income = little_and_su(observed_values, imputation_classes_col = 1)
imputed_income
devtools::load_all()
observed_values = rbind(
c(50000, 55000, 45000),
c(100000, 120000, 70000),
c(50000, 60000, NA)
)
work_type = as.factor(c("unrelated", "real_estate", "real_estate"))
observed_values = cbind(work_type, observed_values)
observed_values
imputed_income = little_and_su(observed_values, imputation_classes_col = 1)
imputed_income
imputed_income = little_and_su(observed_values, imputation_classes_col = 1)
devtools::load_all()
observed_values = rbind(
c(50000, 55000, 45000),
c(100000, 120000, 70000),
c(50000, 60000, NA)
)
work_type = as.factor(c("unrelated", "real_estate", "real_estate"))
observed_values = cbind(work_type, observed_values)
imputed_income = little_and_su(observed_values, imputation_classes_col = 1)
devtools::load_all()
devtools::test()
devtools::load_all()
observed_values = rbind(
c(50000, 55000, 45000),
c(100000, 120000, 70000),
c(50000, 60000, NA)
)
work_type = as.factor(c("unrelated", "real_estate", "real_estate"))
observed_values = cbind(work_type, observed_values)
imputed_income = little_and_su(observed_values, imputation_classes_col = 1)
imputed_income
print(paste0("Our imputed value is ", imputed_income[3,4]))
devtools::build_vignettes()
devtools::load_all()
Y = rbind(
c(10, 15, 20, 25, 30),
c(1, NA, 3, 4, 5),
c(1, 2, 3, NA, 5)
)
print("standard Little and Su imputation")
print(little_and_su(Y), row.names = FALSE)
print("standard Little and Su imputation")
print(little_and_su(Y, window = 3), row.names = FALSE)
devtools::build_vignettes()
library(LittleAndSu)
devtools::load_all()
library(LittleAndSu)
little_and_su(rbind(c(1,2),c(1,2),c(1,NA)))
devtools::build_vignettes()
devtools::build_manual()
devtools::document()
use_mit_license()
usethis::use_mit_license()
options(usethis.full_name = "Julian Bernado")
usethis::use_mit_license()
usethis::use_readme_rmd()
